הפרויקט הסופי של הקורס "שפות תכנות" - קיץ 2017
מגישים: יאיר שור, ומוחמד חלומה.
קורס: שפות תכנות, קיץ 2017, אצל חיים מיכאל. 

קישור לפרויקט ב- GITHUB: 
https://github.com/yshur/WeatherDataService.git

קישור לסרטון ההסבר ב- YOUYUBE:
https://www.youtube.com/watch?v=NLg2KXp3Zyo&feature=youtu.be

יש לנו את המחלקות WeatherData ו Location שמכילות פרמטרים שונים התואמים לאלו שנמצאים באתר openweathermap. המחלקה WeatherData מממשת את האינטרפייס IComparable ומממשת את המתודה CompareTo בכדי שיהיה ניתן להשוות בין שני אובייקטים, ויהיה ניתן להשתמש על האובייקטים הללו בפונקציה Descendants כשננסה לעבד את הנתונים עם LINQ. 
יש את האינטרפייס שנקרא IWeatherDataService שמכיל רק את הפונקציה GetWeatherData שמקבלת פרמטר REF מסוג Location ומחזירה אובייקט מסוג WeatherData. הפרמטר הוא REF בכדי שהפונקציה תוכל לעדכן את הLocation במידת הצורך. 
המחלקה OpenWeatherDataService מממשת את האינטרפייס IWeatherDataService ואת המתודה GetWeatherData. המחלקה הזו מעוצבת על פי תבנית העיצוב סינגלטון בכדי שיהיה רק אובייקט אחד של המחלקה בזמן נתון. 
המחלקה WeatherDataServiceFactory מקבלת פרמטר מסוג string ומחזירה אובייקט שיורש מהאינטרפייס IWeatherDataService. המחלקה מממשת את תבנית העיצוב factory וכך יהיה ניתן דרכה לקבל מגוון של שירותי מזג אוויר שימומשו בהתאם לפרמטר הstring שיועבר לfactory. במידה והfactory מקבל מחרוזת לא מוכרת הוא זורק שגיאה מסוג WeatherDataServiceException . 
המחלקה WeatherDataServiceException מממשת exception שעוצב על ידינו. האקספשן הזה מאוד פשוט - הוא רק מקבל פרמטר מסוג string שמתאר את השגיאה ומדפיס אותה למסך. 
מימשנו יחידת בדיקה שבודקת את GetWeatherData של המחלקה OpenWeatherDataService על ידי השוואה בין שם העיר לID שלה לאחר הריצה. יחידת הבדיקה נמצאת במחלקה OpenWeatherDataServiceTests. 

ייבאנו את הפרויקט לפרויקט אחר שקראנו לו WeatherDataApp, ולאחר שכתבנו למעלה "using WeatherDataService" הצלחנו להריץ בהצלחה את התוכנית. התוכנית יוצרת Location ו factory, ומקבלת את נתוני מזג האוויר בהתאם. 

בכל הפרויקט כתבנו גם קומנטים שתואמים לסגנון הכתיבה של XML. 

לא ייצגנו את הפרויקט בgit pages. 
